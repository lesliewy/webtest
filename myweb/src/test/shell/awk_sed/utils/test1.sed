1,sed 's/^a/b/' 4.txt > 4_sed.txt          :将4.txt 中每行开头的字母a替换为字母b,只是每行的第一个。注意不是将整行替换为b，只是第一个字母a.
                                            4.txt中的每一行都会输出到4_sed.txt中,这是默认的,与下面的-n p 连用不同.
  sed 's/^[0-9][0-9][0-9]//g' b > b1       :删除b文件中前3个数字，但是会被替换为一个空格,所以还要 sed 's/^ //g' b1 > b2 ,这样却可以删除空格.
                                           :合并为:sed -e 's/^[0-9][0-9][0-9]//g' -e 's/^ //g' b > b1   OR  sed -e 's/^[0-9]\{3\}//g' -e 's/^ //g' b > b3

2,sed -n '2,0p' 4.txt > 4_sed.txt          :结果是只有第2行.  sed -n '2,1p' 4.txt > 4_sed.txt 与 sed -n '2,2p' 4.txt > 4_sed.txt 也是这样.
  sed -n '2,100p' 4.txt >4_sed.txt         :结果是4.txt中的第2行至100行，没有100行则是第2行后的所有.
  sed -n '2,/abcddd/p' 4.txt >4_sed.txt    :如果没有找到abcddd，则会是第2行至文末.另外,查找abcddd是从第3行开始的.
  sed -n '/a/,/b/p' 4.txt > 4_sed.txt      :先从第1行往下依次开始查找a,如果找到，则紧接着查找b；如果找到，则再开始查找a,然后是b,如此的循环.

3,ls | sed "s:^:`pwd`/:g"                  :列出当前所有文件的绝对路径.  以 : 作为分隔符，而不是 /
