<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="INFO" monitorInterval="1800">
    <properties>
        <property name="LOG_HOME">/Users/leslie/IdeaProjects/Logs/webtest</property>
        <property name="APP_FILE_NAME">app</property>
    </properties>
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{1} - %msg%n"/>
        </Console>
        <RollingRandomAccessFile name="rollinglogappender"
                                 fileName="${LOG_HOME}/${APP_FILE_NAME}.log"
                                 filePattern="${LOG_HOME}/${APP_FILE_NAME}-%d{yyyy-MM-dd}-%i.log">
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{1} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="50 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="50"/>
        </RollingRandomAccessFile>
    </Appenders>
    <Loggers>
        <Logger name="org.springframework.retry.support" level="trace" additivity="false">
            <AppenderRef ref="rollinglogappender"/>
        </Logger>
        <Logger name="org.apache.ibatis" level="trace" additivity="true">
            <AppenderRef ref="rollinglogappender"/>
        </Logger>
        <Logger name="cn.mybatis.cache" level="trace" additivity="false">
            <AppenderRef ref="rollinglogappender"/>
        </Logger>
        <!--
            mybatis 中打印出sql
            方法一: 配置logger, 指定mapper 的id, level 设置为debug or trace.
               查看 BaseJdbcLogger 的继承结构，其中有ConnectionLogger, 如果指定的mapper 是debug级别，会设置该mapper下的statementLog为debug,
               从而会使用该ConnectionLogger记录sql (org.apache.ibatis.executor.BaseExecutor.getConnection)
               这里是通过jdk 动态代理的方式来使用 ConnectionLogger
               同理, PreparedStatementLogger 会打印 parameter

            方法二: mybatis 的<settings> 中添加 <setting name="logImpl" value="STDOUT_LOGGING" />
               这个方法对所有的mapper 生效， 不必一个一个mapper的配置.
               解析配置文件时，会取logImpl的值 (org.apache.ibatis.builder.xml.XMLConfigBuilder#settingsElement), 并从typeAliasRegistry中获取该值对应的value, 为 StdOutImpl
               org.apache.ibatis.session.Configuration#Configuration()  该类中 isDebugEnabled 直接return true, 从而和方法一一样，获取ConnectionLogger， PreparedStatementLogger
        -->
        <Logger name="cn.wy.dal.mapper.UserMapper.findById" level="info" additivity="false">
            <AppenderRef ref="rollinglogappender"/>
        </Logger>
        <Logger name="mylog" level="trace" additivity="false">
            <AppenderRef ref="Console"/>
        </Logger>
        <Logger name="rollinglog" level="trace" additivity="false">
            <AppenderRef ref="rollinglogappender"/>
        </Logger>
        <Root level="info">
            <AppenderRef ref="rollinglogappender"/>
        </Root>
    </Loggers>
</Configuration>
